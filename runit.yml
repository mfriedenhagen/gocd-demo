---
- name: Use runit
  hosts: gocd
  vars:
    - go_services:
      - go-server
      - go-agent
      - go-agent-1
      - go-agent-2
    - go_services_to_start:
      - go-server
      - go-agent

    - go_server_host: "127.0.0.1"
    - go_server_port: 8153
    - go_server_port_ssl: 8154

    - maven_version: 3.3.3
    - maven_sha256: 9e031bc81acd92c1dd7cd00a9f8515d75b9cf2a550048dab109588eca4a4df45
    - maven_base_url: http://repo1.maven.org/maven2/org/apache/maven/apache-maven

  tasks:

    - name: Add JDK8 repository
      command: add-apt-repository ppa:webupd8team/java -y
      changed_when: false

    - name: Update APT cache
      apt:
        update_cache: yes
        cache_valid_time: 600

    - name: Accept Oracle license
      shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
      changed_when: false

    - name: Install oracle-java8 and make this the default
      apt:
        name: "{{item}}"
        state: latest
      with_items:
        - oracle-java8-installer
        - oracle-java8-set-default

    - name: Install runit
      apt:
        name: runit
        state: latest

    - stat:
        path: /etc/sv/go-server
      register: go_server_service

    - command: "/etc/init.d/{{item}} stop"
      with_items: go_services
      when: "not go_server_service.stat.exists"

    - service:
        name: "{{item}}"
        enabled: no
      with_items: go_services

    - file:
        path: "/etc/sv/{{item}}"
        state: directory
      with_items: go_services

    - file:
        path: "/etc/sv/{{item}}/log"
        state: directory
      with_items: go_services

    - lineinfile:
        dest: "/etc/default/{{item}}"
        regexp: "^DAEMON="
        line: DAEMON=N
      with_items: go_services

    - copy:
        dest: /etc/sv/go-server/run
        mode: 0755
        content: |
          #!/bin/sh
          DEBIANCONFIG=/etc/default/go-server
          test -f $DEBIANCONFIG && . $DEBIANCONFIG
          cd /var/lib/go-server
          exec 2>&1
          exec chpst -u go /etc/alternatives/java \
          -server \
          -Xms512m \
          -Xmx1024m \
          -XX:PermSize=128m \
          -XX:MaxPermSize=256m \
          -Duser.language=en \
          -Djruby.rack.request.size.threshold.bytes=30000000 \
          -Duser.country=US \
          -Dcruise.config.dir=/etc/go \
          -Dcruise.config.file=/etc/go/cruise-config.xml \
          -Dcruise.server.port={{go_server_port}} \
          -Dcruise.server.ssl.port={{go_server_port_ssl}} \
          -DpluginLocationMonitor.sleepTimeInSecs=3 \
          -jar /usr/share/go-server/go.jar

    - copy:
        dest: "/etc/sv/go-agent{{item}}/run"
        mode: 0755
        content: |
          #!/bin/sh
          AGENT_MEM=128m
          AGENT_MAX_MEM=256m
          export AGENT_STARTUP_ARGS="-Dcruise.console.publish.interval=10 -Xms$AGENT_MEM -Xmx$AGENT_MAX_MEM $GO_AGENT_SYSTEM_PROPERTIES"
          cd /var/lib/go-agent{{item}}
          exec 2>&1
          exec chpst -u go /etc/alternatives/java -jar "/usr/share/go-agent/agent-bootstrapper.jar" {{go_server_host}} {{go_server_port}}
      with_items: ["", "-1", "-2"]

    - copy:
        dest: "/etc/sv/{{item}}/log/run"
        mode: 0755
        content: |
          #!/bin/sh
          exec chpst -u go svlogd /var/log/{{item}}
      with_items: go_services

    - file:
        dest: "/etc/service/{{item}}"
        src: "/etc/sv/{{item}}"
        state: link
      with_items: go_services_to_start

    - runit:
        name: "{{item}}"
        state: started
      with_items: go_services_to_start

    - name: Fetch Maven
      get_url:
        dest: /usr/local/apache-maven-{{maven_version}}-bin.zip
        url: "{{maven_base_url}}/{{maven_version}}/apache-maven-{{maven_version}}-bin.zip"
        sha256sum: "{{maven_sha256}}"
        timeout: 20

    - name: Unpack Maven
      unarchive:
        copy: no
        dest: /usr/local/
        src: /usr/local/apache-maven-{{maven_version}}-bin.zip
        creates: /usr/local/apache-maven-{{maven_version}}/bin/mvn

    - command: update-alternatives --install /usr/bin/mvn mvn /usr/local/apache-maven-{{maven_version}}/bin/mvn 0
      register: result
      changed_when: result.stdout
